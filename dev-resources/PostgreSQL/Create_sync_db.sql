CREATE DATABASE [IF NOT EXISTS] synch_db;



CREATE SCHEMA [IF NOT EXISTS] staging;



-- Navigate to elrr schema 
SET search_path TO staging;

CREATE TABLE IF NOT EXISTS staging."import" (
	importid int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	importname varchar NULL,
	importstartdate timestamp NULL,
	importenddate timestamp NULL,
	recordstatus varchar NULL,
	updatedby varchar NULL,
	inserteddate timestamp NULL,
	lastmodified timestamp NULL
);



CREATE TABLE IF NOT EXISTS staging.importdetail (
	importdetailid int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	importid int4 NULL,
	importbegintime timestamp NULL,
	importendtime timestamp NULL,
	totalrecords int4 NULL,
	successrecords int4 NULL,
	failedrecords int4 NULL,
	recordstatus varchar NULL,
	CONSTRAINT importdetail_fk FOREIGN KEY (importid) REFERENCES staging."import"(importid)
);



CREATE TABLE IF NOT EXISTS staging.syncrecord (
    syncrecordid int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    recordstatus varchar NULL,
    synckey varchar NULL,
    importdetailid int4 NULL,
	inserteddate timestamp NULL,
	updatedby varchar NULL,
	lastmodified timestamp NULL,
	CONSTRAINT syncrecord_fk FOREIGN KEY (importdetailid) REFERENCES staging.importdetail(importdetailid)
);



CREATE TABLE IF NOT EXISTS staging.syncrecorddetail (
	syncrecorddetailid int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	syncrecordid int8 NULL,
	"jsonb" varchar NULL,
	recordstatus varchar NULL,
	inserteddate timestamp NULL,
	updatedby varchar NULL,
	lastmodified timestamp NULL,
	payload varchar NULL,
	learner varchar NULL,
	CONSTRAINT syncrecorddetail_fk FOREIGN KEY (syncrecordid) REFERENCES staging.syncrecord(syncrecordid)
);